/**
 * Aria REST API
 *  Rest API for common-tosca-aria service
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Copyright (c) 2016-2017 GigaSpaces Technologies Ltd. All rights reserved.
 * Modifications Copyright 2017 Huawei Technologies Co., Ltd.
 */


package org.openo.sdno.lcm.restclient.aria.api;

import org.openo.sdno.lcm.restclient.aria.ApiException;
import org.openo.sdno.lcm.restclient.aria.model.IndirectData;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ParserApi
 */
public class ParserApiTest {

    private final ParserApi api = new ParserApi();

    
    /**
     * Create instance from file using given path
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerInstanceFileTest() throws ApiException {
        String path = null;
        String inputs = null;
        // Object response = api.parseControllerInstanceFile(path, inputs);

        // TODO: test validations
    }
    
    /**
     * Create instance from blueprint specyfied by URI
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerInstanceIndirectTest() throws ApiException {
        IndirectData indirectData = null;
        // Object response = api.parseControllerInstanceIndirect(indirectData);

        // TODO: test validations
    }
    
    /**
     * Create instance from uploaded blueprint file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerInstanceUploadTest() throws ApiException {
        Object uploadContent = null;
        String inputs = null;
        // Object response = api.parseControllerInstanceUpload(uploadContent, inputs);

        // TODO: test validations
    }
    
    /**
     * Create model from blueprint file using given path
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerModelFileTest() throws ApiException {
        String path = null;
        // Object response = api.parseControllerModelFile(path);

        // TODO: test validations
    }
    
    /**
     * Create model from blueprint specyfied by URI
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerModelIndirectTest() throws ApiException {
        IndirectData indirectData = null;
        // Object response = api.parseControllerModelIndirect(indirectData);

        // TODO: test validations
    }
    
    /**
     * Create model from uploaded blueprint file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerModelUploadTest() throws ApiException {
        Object uploadContent = null;
        String inputs = null;
        // Object response = api.parseControllerModelUpload(uploadContent, inputs);

        // TODO: test validations
    }
    
    /**
     * Validate blueprint file using given path
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerValidateFileTest() throws ApiException {
        String path = null;
        // Object response = api.parseControllerValidateFile(path);

        // TODO: test validations
    }
    
    /**
     * Validate blueprint file using given URI
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerValidateIndirectTest() throws ApiException {
        IndirectData indirectData = null;
        // Object response = api.parseControllerValidateIndirect(indirectData);

        // TODO: test validations
    }
    
    /**
     * Validate uploaded blueprint file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void parseControllerValidateUploadTest() throws ApiException {
        Object uploadContent = null;
        String inputs = null;
        // Object response = api.parseControllerValidateUpload(uploadContent, inputs);

        // TODO: test validations
    }
    
}
