/**
 * connectivity services
 * API of connectivity services
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.openo.sdno.lcm.restclient.serviceinventory.api;

import org.openo.sdno.lcm.restclient.serviceinventory.ApiException;
import org.openo.sdno.lcm.restclient.serviceinventory.model.ResponseConnectivityService;
import org.openo.sdno.lcm.restclient.serviceinventory.model.ConnectivityService;
import org.openo.sdno.lcm.restclient.serviceinventory.model.UpdateResponseConnectivityService;
import org.openo.sdno.lcm.restclient.serviceinventory.model.UpdateConnectivityService;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * Add a new connectivity services
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createConnectivityServiceTest() throws ApiException {
        ConnectivityService body = null;
        // ResponseConnectivityService response = api.createConnectivityService(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete the connectivity services
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteConnectivityServiceTest() throws ApiException {
        String id = null;
        // api.deleteConnectivityService(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Add a new connectivity services
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConnectivityServiceTest() throws ApiException {
        // ResponseConnectivityService response = api.getConnectivityService();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Read the connectivity services
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readConnectivityServiceTest() throws ApiException {
        String id = null;
        // ResponseConnectivityService response = api.readConnectivityService(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * modify the value.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateConnectivityServiceTest() throws ApiException {
        String id = null;
        UpdateConnectivityService body = null;
        // UpdateResponseConnectivityService response = api.updateConnectivityService(id, body);

        // TODO: test validations
    }
    
}
