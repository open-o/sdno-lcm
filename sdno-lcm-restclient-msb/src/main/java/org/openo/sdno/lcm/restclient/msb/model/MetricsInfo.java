/**
 * MicroService Bus rest API
 * 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.openo.sdno.lcm.restclient.msb.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openo.sdno.lcm.restclient.msb.model.Gauges;
import org.openo.sdno.lcm.restclient.msb.model.Timers;


/**
 * MetricsInfo
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-20T12:04:17.236Z")
public class MetricsInfo   {
  @JsonProperty("gauges")
  private Gauges gauges = null;

  @JsonProperty("timers")
  private Timers timers = null;

  public MetricsInfo gauges(Gauges gauges) {
    this.gauges = gauges;
    return this;
  }

   /**
   * Get gauges
   * @return gauges
  **/
  @ApiModelProperty(example = "null", value = "")
  public Gauges getGauges() {
    return gauges;
  }

  public void setGauges(Gauges gauges) {
    this.gauges = gauges;
  }

  public MetricsInfo timers(Timers timers) {
    this.timers = timers;
    return this;
  }

   /**
   * Get timers
   * @return timers
  **/
  @ApiModelProperty(example = "null", value = "")
  public Timers getTimers() {
    return timers;
  }

  public void setTimers(Timers timers) {
    this.timers = timers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricsInfo metricsInfo = (MetricsInfo) o;
    return Objects.equals(this.gauges, metricsInfo.gauges) &&
        Objects.equals(this.timers, metricsInfo.timers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gauges, timers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricsInfo {\n");
    
    sb.append("    gauges: ").append(toIndentedString(gauges)).append("\n");
    sb.append("    timers: ").append(toIndentedString(timers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

