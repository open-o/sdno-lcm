{
    "instance": {
        "description": "simple mockup template, to be used as a base to test initial model based LCM, no values are returned",
        "metadata": {
            "template_name": "mockup",
            "template_author": "Pierfranco Ferronato",
            "version": 0.1,
            "vendor": "sdno",
            "id": "mockup"
        },
        "nodes": [
            {
                "id": "myTestNode_wyg7qm8oqwb7xxazfr9puxsv8",
                "type_name": "tosca.nodes.Root",
                "template_name": "myTestNode",
                "interfaces": [
                    {
                        "name": "Standard",
                        "description": "This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.",
                        "type_name": "tosca.interfaces.node.lifecycle.Standard",
                        "operations": [
                            {
                                "name": "create",
                                "description": "Standard lifecycle create operation."
                            },
                            {
                                "name": "stop",
                                "description": "Standard lifecycle stop operation."
                            },
                            {
                                "name": "start",
                                "description": "Standard lifecycle start operation."
                            },
                            {
                                "name": "delete",
                                "description": "Standard lifecycle delete operation."
                            },
                            {
                                "name": "configure",
                                "description": "Standard lifecycle configure operation."
                            }
                        ]
                    }
                ],
                "capabilities": [
                    {
                        "name": "feature",
                        "type_name": "tosca.capabilities.Node"
                    }
                ]
            }
        ],
        "inputs": {
            "serviceId": {
                "type_name": "integer",
                "description": "service id"
            },
            "param1": {
                "type_name": "string",
                "value": "Hello World",
                "description": "parameter to be returned"
            }
        }
    },
    "model": {
        "description": "simple mockup template, to be used as a base to test initial model based LCM, no values are returned",
        "metadata": {
            "template_name": "mockup",
            "template_author": "Pierfranco Ferronato",
            "version": 0.1,
            "vendor": "sdno",
            "id": "mockup"
        },
        "node_templates": [
            {
                "name": "myTestNode",
                "type_name": "tosca.nodes.Root",
                "default_instances": 1,
                "min_instances": 0,
                "interface_templates": [
                    "<aria.modeling.model_elements.InterfaceTemplate object at 0x7fefd5c512d0>"
                ],
                "capability_templates": [
                    {
                        "name": "feature",
                        "type_name": "tosca.capabilities.Node"
                    }
                ]
            }
        ],
        "inputs": {
            "serviceId": {
                "type_name": "integer",
                "description": "service id"
            },
            "param1": {
                "type_name": "string",
                "value": "Hello World",
                "description": "parameter to be returned"
            }
        }
    },
    "types": {
        "node_types": [
            {
                "name": "tosca.nodes.Root",
                "description": "The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).",
                "parent": null
            },
            {
                "name": "tosca.nodes.network.Port",
                "description": "The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.\nThe Port node type effectively represents a single virtual NIC on the Compute node instance.",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.ObjectStorage",
                "description": "The TOSCA ObjectStorage node represents storage that provides the ability to store data as objects (or BLOBs of data) without consideration for the underlying filesystem or devices.",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.network.Network",
                "description": "The TOSCA Network node represents a simple, logical network service.",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.LoadBalancer",
                "description": "The TOSCA Load Balancer node represents logical function that be used in conjunction with a Floating Address to distribute an application's traffic (load) across a number of instances of the application (e.g., for a clustered or scaled application).",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.SoftwareComponent",
                "description": "The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.WebApplication",
                "description": "The TOSCA WebApplication node represents a software application that can be managed and run by a TOSCA WebServer node. Specific types of web applications such as Java, etc. could be derived from this type.",
                "parent": "tosca.nodes.SoftwareComponent"
            },
            {
                "name": "tosca.nodes.DBMS",
                "description": "The TOSCA DBMS node represents a typical relational, SQL Database Management System software component or service.",
                "parent": "tosca.nodes.SoftwareComponent"
            },
            {
                "name": "tosca.nodes.Container.Runtime",
                "description": "The TOSCA Container Runtime node represents operating system-level virtualization technology used to run multiple application services on a single Compute host.",
                "parent": "tosca.nodes.SoftwareComponent"
            },
            {
                "name": "tosca.nodes.WebServer",
                "description": "This TOSCA WebServer Node Type represents an abstract software component or service that is capable of hosting and providing management operations for one or more WebApplication nodes.",
                "parent": "tosca.nodes.SoftwareComponent"
            },
            {
                "name": "tosca.nodes.Database",
                "description": "The TOSCA Database node represents a logical database that can be managed and hosted by a TOSCA DBMS node.",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.Compute",
                "description": "The TOSCA Compute node represents one or more real or virtual processors of software applications or services along with other essential local resources. Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) \"server\".",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.sdno.networkService",
                "description": "example of a sdno DSL",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.Container.Application",
                "description": "The TOSCA Container Application node represents an application that requires Container-level virtualization technology.",
                "parent": "tosca.nodes.Root"
            },
            {
                "name": "tosca.nodes.BlockStorage",
                "description": "",
                "parent": "tosca.nodes.Root"
            }
        ],
        "group_types": [
            {
                "name": "tosca.groups.Root",
                "description": "This is the default (root) TOSCA Group Type definition that all other TOSCA base Group Types derive from.",
                "parent": null
            }
        ],
        "capability_types": [
            {
                "name": "tosca.capabilities.Root",
                "description": "This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from.",
                "parent": null
            },
            {
                "name": "tosca.capabilities.Container",
                "description": "The Container capability, when included on a Node Type or Template definition, indicates that the node can act as a container for (or a host for) one or more other declared Node Types.",
                "parent": "tosca.capabilities.Root"
            },
            {
                "name": "tosca.capabilities.Attachment",
                "description": "This is the default TOSCA type that should be used or extended to define an attachment capability of a (logical) infrastructure device node (e.g., BlockStorage node).",
                "parent": "tosca.capabilities.Root"
            },
            {
                "name": "tosca.capabilities.Endpoint",
                "description": "This is the default TOSCA type that should be used or extended to define a network endpoint capability. This includes the information to express a basic endpoint with a single port or a complex endpoint with multiple ports. By default the Endpoint is assumed to represent an address on a private network unless otherwise specified.",
                "parent": "tosca.capabilities.Root"
            },
            {
                "name": "tosca.capabilities.Endpoint.Database",
                "description": "This is the default TOSCA type that should be used or extended to define a specialized database endpoint capability.",
                "parent": "tosca.capabilities.Endpoint"
            },
            {
                "name": "tosca.capabilities.Endpoint.Admin",
                "description": "This is the default TOSCA type that should be used or extended to define a specialized administrator endpoint capability.",
                "parent": "tosca.capabilities.Endpoint"
            },
            {
                "name": "tosca.capabilities.Endpoint.Public",
                "description": "This capability represents a public endpoint which is accessible to the general internet (and its public IP address ranges).\nThis public endpoint capability also can be used to create a floating (IP) address that the underlying network assigns from a pool allocated from the application's underlying public network. This floating address is managed by the underlying network such that can be routed an application's private address and remains reliable to internet clients.",
                "parent": "tosca.capabilities.Endpoint"
            },
            {
                "name": "tosca.capabilities.Scalable",
                "description": "This is the default TOSCA type that should be used to express a scalability capability for a node.",
                "parent": "tosca.capabilities.Root"
            },
            {
                "name": "tosca.capabilities.OperatingSystem",
                "description": "This is the default TOSCA type that should be used to express an Operating System capability for a node.",
                "parent": "tosca.capabilities.Root"
            },
            {
                "name": "tosca.capabilities.Node",
                "description": "The Node capability indicates the base capabilities of a TOSCA Node Type.",
                "parent": "tosca.capabilities.Root"
            },
            {
                "name": "tosca.capabilities.network.Bindable",
                "description": "A node type that includes the Bindable capability indicates that it can be bound to a logical network association via a network port.",
                "parent": "tosca.capabilities.Node"
            },
            {
                "name": "tosca.capabilities.network.Linkable",
                "description": "A node type that includes the Linkable capability indicates that it can be pointed by tosca.relationships.network.LinksTo relationship type.",
                "parent": "tosca.capabilities.Node"
            }
        ],
        "relationship_types": [
            {
                "name": "tosca.relationships.Root",
                "description": "This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.",
                "parent": null
            },
            {
                "name": "tosca.relationships.AttachesTo",
                "description": "This type represents an attachment relationship between two nodes. For example, an AttachesTo relationship type would be used for attaching a storage node to a Compute node.",
                "parent": "tosca.relationships.Root"
            },
            {
                "name": "tosca.relationships.ConnectsTo",
                "description": "This type represents a network connection relationship between two nodes.",
                "parent": "tosca.relationships.Root"
            },
            {
                "name": "tosca.relationships.RoutesTo",
                "description": "This type represents an intentional network routing between two Endpoints in different networks.",
                "parent": "tosca.relationships.ConnectsTo"
            },
            {
                "name": "tosca.relationships.HostedOn",
                "description": "This type represents a hosting relationship between two nodes.",
                "parent": "tosca.relationships.Root"
            },
            {
                "name": "tosca.relationships.DependsOn",
                "description": "This type represents a general dependency relationship between two nodes.",
                "parent": "tosca.relationships.Root"
            },
            {
                "name": "tosca.relationships.network.LinksTo",
                "description": "This relationship type represents an association relationship between Port and Network node types.",
                "parent": "tosca.relationships.DependsOn"
            },
            {
                "name": "tosca.relationships.network.BindsTo",
                "description": "This type represents a network association relationship between Port and Compute node types.",
                "parent": "tosca.relationships.DependsOn"
            }
        ],
        "policy_types": [
            {
                "name": "tosca.policies.Root",
                "description": "This is the default (root) TOSCA Policy Type definition that all other TOSCA base Policy Types derive from.",
                "parent": null
            },
            {
                "name": "tosca.policies.Placement",
                "description": "This is the default (root) TOSCA Policy Type definition that is used to govern placement of TOSCA nodes or groups of nodes.",
                "parent": "tosca.policies.Root"
            },
            {
                "name": "tosca.policies.Update",
                "description": "This is the default (root) TOSCA Policy Type definition that is used to govern update of TOSCA nodes or groups of nodes.",
                "parent": "tosca.policies.Root"
            },
            {
                "name": "tosca.policies.Performance",
                "description": "This is the default (root) TOSCA Policy Type definition that is used to declare performance requirements for TOSCA nodes or groups of nodes.",
                "parent": "tosca.policies.Root"
            },
            {
                "name": "tosca.policies.Scaling",
                "description": "This is the default (root) TOSCA Policy Type definition that is used to govern scaling of TOSCA nodes or groups of nodes.",
                "parent": "tosca.policies.Root"
            }
        ],
        "policy_trigger_types": [],
        "artifact_types": [
            {
                "name": "tosca.artifacts.Root",
                "description": "This is the default (root) TOSCA Artifact Type definition that all other TOSCA base Artifact Types derive from.",
                "parent": null
            },
            {
                "name": "tosca.artifacts.Implementation",
                "description": "This artifact type represents the parent type for all implementation artifacts in TOSCA. These artifacts are used to implement operations of TOSCA interfaces either directly (e.g., scripts) or indirectly (e.g., config. files).",
                "parent": "tosca.artifacts.Root"
            },
            {
                "name": "tosca.artifacts.Implementation.Bash",
                "description": "This artifact type represents a Bash script type that contains Bash commands that can be executed on the Unix Bash shell.",
                "parent": "tosca.artifacts.Implementation"
            },
            {
                "name": "tosca.artifacts.Implementation.Python",
                "description": "This artifact type represents a Python file that contains Python language constructs that can be executed within a Python interpreter.",
                "parent": "tosca.artifacts.Implementation"
            },
            {
                "name": "tosca.artifacts.Deployment",
                "description": "This artifact type represents the parent type for all deployment artifacts in TOSCA. This class of artifacts typically represents a binary packaging of an application or service that is used to install/create or deploy it as part of a node's lifecycle.",
                "parent": "tosca.artifacts.Root"
            },
            {
                "name": "tosca.artifacts.Deployment.Image.VM",
                "description": "This artifact represents the parent type for all Virtual Machine (VM) image and container formatted deployment artifacts. These images contain a stateful capture of a machine (e.g., server) including operating system and installed software along with any configurations and can be run on another machine using a hypervisor which virtualizes typical server (i.e., hardware) resources.",
                "parent": "tosca.artifacts.Deployment"
            },
            {
                "name": "tosca.artifacts.Deployment.Image",
                "description": "This artifact type represents a parent type for any \"image\" which is an opaque packaging of a TOSCA Node's deployment (whether real or virtual) whose contents are typically already installed and pre-configured (i.e., \"stateful\") and prepared to be run on a known target container.",
                "parent": "tosca.artifacts.Deployment"
            },
            {
                "name": "tosca.artifacts.File",
                "description": "This artifact type is used when an artifact definition needs to have its associated file simply treated as a file and no special handling/handlers are invoked (i.e., it is not treated as either an implementation or deployment artifact type).",
                "parent": "tosca.artifacts.Root"
            }
        ],
        "interface_types": [
            {
                "name": "tosca.interfaces.Root",
                "description": "This is the default (root) TOSCA Interface Type definition that all other TOSCA Interface Types derive from.",
                "parent": null
            },
            {
                "name": "tosca.interfaces.relationship.Configure",
                "description": "The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.",
                "parent": "tosca.interfaces.Root"
            },
            {
                "name": "tosca.interfaces.node.lifecycle.Standard",
                "description": "This lifecycle interface defines the essential, normative operations that TOSCA nodes may support.",
                "parent": "tosca.interfaces.Root"
            }
        ]
    }
}
